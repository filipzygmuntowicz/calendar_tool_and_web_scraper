import task1
import pytest
import requests
from datetime import datetime
soonest_date = __import__("find-available-slot")


class Test:

    def test_download_sellers_json(self):
        task1.sellers.add_to_dictionary(
            "ascendeum.com", task1.Seller("ascendeum.com"))
        task1.get_sellers("ascendeum.com")
        final_data = []
        max_depth = 0
        for seller in task1.sellers.dictionary.values():
            final_data.append(
                {"domain": seller.domain, "contractors": seller.contractors})
        final_data = {"items": final_data}
        assert final_data == {'items': [{'domain': 'ascendeum.com', 'contractors': [{'name': 'Tracker Network LLC', 'domain': 'tracker.gg'}, {'name': 'Stands4 LTD', 'domain': 'abbreviations.com'}, {'name': 'Gamepress LLC', 'domain': 'gamepress.gg'}, {'name': 'The Bolde Inc.', 'domain': 'bolde.com'}, {'name': 'Clear Coast LTD', 'domain': 'greetingsisland.com'}, {'name': 'Wehco Media Inc.', 'domain': 'arkansasonline.com'}, {'name': 'Shekar, Inc.', 'domain': 'koreaboo.com'}, {'name': 'Waylon H. Lewis Enterprises, LLC', 'domain': 'elephantjournal.com'}, {'name': 'CQ Roll Call', 'domain': 'rollcall.com'}, {'name': 'Temptalia LLC', 'domain': 'temptalia.com'}, {'name': 'Kueez Entertainment Ltd', 'domain': 'kueez.com'}, {'name': 'Forum LLC', 'domain': 'thelayoff.com'}, {'name': 'TN Marketing LLC', 'domain': 'tnmarketing.com'}, {'name': 'Source Digital, INC.', 'domain': 'thesource.com'}, {'name': 'Quizony SP', 'domain': 'quizony.com'}, {'name': 'The 18, LLC', 'domain': 'the18.com'}, {'name': 'Lake-Link Inc.', 'domain': 'lake-link.com'}, {'name': 'Scores In Live', 'domain': 'scoresinlive.com'}, {'name': 'Enthused Digital, LLC', 'domain': 'enthuseddigital.com'}, {'name': 'Young Hollywood LLC', 'domain': 'younghollywood.com'}, {'name': 'Mamas Uncut LLC', 'domain': 'mamasuncut.com'}, {'name': 'SVT Performance LLC', 'domain': 'svtperformance.com'}, {'name': 'The Daily Dot, LLC', 'domain': 'dailydot.com'}, {'name': 'Kazan Inc, DBA Exceljet', 'domain': 'exceljet.net'}, {'name': 'Qzingo', 'domain': 'buddymeter.com'}, {'name': 'Urge IO GmbH', 'domain': 'versus.com'}, {'name': 'Media Partners Ltd', 'domain': 'rankchart.org'}, {'name': 'Lola Digital Media LLC', 'domain': 'soaphub.com'}, {'name': 'Lets Run', 'domain': 'letsrun.com'}, {'name': 'Daily Herald', 'domain': 'dailyherald.com'}, {'name': 'Route 413 Capital LLC', 'domain': 'thegradcafe.com'}, {'name': 'StudyTonight Technologies Private Limited', 'domain': 'studytonight.com'}, {'name': 'Ilan Bar Magen 061220380', 'domain': 'gate2home.com'}, {'name': 'Med Students Online', 'domain': 'medstudentsonline.com.au'}, {'name': 'TransMedia Inc.', 'domain': 'freeconvert.com'}, {'name': 'OBV2 LLC', 'domain': 'broncosportforum.com'}, {'name': 'MenschDanke GmbH', 'domain': 'schnaeppchenfuchs.com'}, {'name': 'Circle38', 'domain': 'photocircle.com'}, {'name': 'Inquirer Interactive Inc.', 'domain': 'Inquirer.net'}]}, {'domain': 'kueez.com', 'contractors': [{'name': 'RoundForest', 'domain': 'bestdeals.today'}, {'name': 'RoundForest', 'domain': 'bestreviews.guide'}, {'name': 'Townsquare', 'domain': 'popcrush.com'}, {'name': 'HomeTalk', 'domain': 'hometalk.com'}, {'name': 'Novelty', 'domain': 'sports101.com'}, {'name': 'Novelty', 'domain': 'myhouse101.com'}, {'name': 'Novelty', 'domain': 'directexpose.com'}, {'name': 'HomeTalk', 'domain': 'upstyledaily.com'}, {'name': 'HomeTalk', 'domain': 'foodtalkdaily.com'}, {'name': 'Worldly Review', 'domain': 'eternallifestyle.com'}, {'name': 'Townsquare', 'domain': 'ultimateclassicrock.com'}, {'name': 'Townsquare', 'domain': 'loudwire.com'}, {'name': 'Allinhiphop', 'domain': 'allhiphop.com'}, {'name': 'EMG', 'domain': 'morninghoney.com'}, {'name': 'EMG', 'domain': 'theroyalobserver.com'}, {'name': 'IronSource', 'domain': 'lifelessoninc.com'}, {'name': 'Townsquare', 'domain': 'xxlmag.com'},
{'name': 'Reignn', 'domain': 'freshedits.com'}, {'name': 'VerticalScope', 'domain': 'autoguide.com'}, {'name': 'NineDawn', 'domain': 'goodietravel.com'}, {'name': 'NineDawn', 'domain': 'parentsdeal.com'}, {'name': 'NineDawn', 'domain': 'cooldinner.com'}, {'name': 'HomeTalk', 'domain': 'petguide.com'}]}]}

    def test_find_soonest_available_data(self):
        test_now = datetime.strptime(
            '2022-06-01 23:50:24', '%Y-%m-%d %H:%M:%S').timestamp()
        test_now2 = datetime.strptime(
            '2022-07-01 09:00:00', '%Y-%m-%d %H:%M:%S').timestamp()
        assert str(soonest_date.find_soonest_date(
            "/in", 30, 2, test_now2)) == "2022-07-02 13:00:00"
